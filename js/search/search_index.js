var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/ConnectionNotFoundError.html",[0,0.121,1,1.505]],["body/classes/ConnectionNotFoundError.html",[0,0.19,1,2.357,2,0.519,3,0.437,4,0.437,5,3.655,6,2.921,7,0.547,8,2.217,9,1.846,10,2.687,11,3.101,12,3.655,13,2.933,14,2.572,15,3.385,16,1.291,17,2.272,18,1.663,19,4.497,20,1.666,21,1.475,22,3.593,23,2.357,24,1.663,25,0.047,26,0.912,27,0.519,28,0.519,29,3.652,30,0.76,31,1.004,32,0.607,33,1.31,34,0.519,35,1.032,36,3.593,37,0.803,38,0.036,39,0.036]],["title/injectables/DNSHealthIndicator.html",[40,0.415,41,1.505]],["body/injectables/DNSHealthIndicator.html",[0,0.081,2,0.279,3,0.235,4,0.235,7,0.514,8,1.894,10,1.746,16,0.554,17,2.056,18,0.893,20,0.625,21,1.613,23,1.531,24,2.056,25,0.047,26,0.998,27,0.568,28,0.792,30,0.838,31,1.031,32,0.714,33,0.704,34,0.279,35,1.365,37,0.652,38,0.04,39,0.024,40,0.51,41,2.06,42,2.213,43,1.569,44,1.746,45,1.62,46,1.276,47,1.746,48,2.374,49,3.862,50,2.921,51,0.431,52,1.352,53,2.328,54,2.921,55,2.328,56,2.431,57,3.525,58,1.93,59,4.864,60,1.93,61,1.531,62,2.921,63,1.484,64,3.931,65,1.93,66,2.374,67,2.523,68,2.907,69,2.056,70,0.9,71,1.569,72,1.569,73,2.735,74,4.614,75,1.93,76,2.056,77,2.921,78,1.819,79,2.014,80,1.569,81,4.442,82,1.746,83,1.93,84,1.93,85,2.014,86,0.998,87,1.93,88,1.93,89,0.839,90,0.49,91,1.011,92,0.279,93,1.93,94,0.742,95,1.93,96,1.011,97,1.331,98,1.531,99,1.93,100,1.93,101,1.569,102,1.93,103,1.93,104,1.569,105,1.93,106,1.569,107,3.525,108,0.893,109,3.525,110,1.93,111,1.93,112,1.93,113,0.704,114,2.921,115,2.014,116,2.014,117,1.011,118,1.569,119,1.331,120,1.331,121,1.93,122,1.93,123,2.106,124,1.331,125,1.93,126,1.153,127,1.331,128,2.014,129,1.93]],["title/injectables/DatabaseHealthIndicator.html",[40,0.415,130,1.329]],["body/injectables/DatabaseHealthIndicator.html",[0,0.084,1,1.568,2,0.288,3,0.242,4,0.242,7,0.486,8,0.818,11,3.795,13,1.191,14,1.883,15,2.478,16,0.572,17,1.385,18,0.922,21,1.475,23,1.568,24,1.663,25,0.047,26,0.912,27,0.519,28,0.743,30,0.723,31,1.096,32,0.788,33,0.727,34,0.433,35,1.23,37,0.445,38,0.039,39,0.024,40,0.519,42,2.093,44,1.788,45,1.561,46,1.147,47,1.788,51,0.445,52,1.385,53,2.093,55,2.357,56,2.478,63,1.032,67,2.147,68,2.558,69,1.849,70,0.878,72,1.62,78,2.407,79,2.064,82,1.788,85,2.064,86,0.76,89,1.032,90,0.506,91,1.044,92,0.288,94,0.76,96,1.044,97,1.374,98,1.568,108,1.849,113,1.31,115,2.755,116,1.374,117,1.568,120,1.374,123,2.787,124,1.374,126,1.191,127,1.374,128,2.064,130,1.849,131,1.374,132,3.621,133,2.992,134,1.993,135,1.993,136,2.387,137,1.993,138,2.432,139,2.387,140,2.432,141,1.191,142,4.064,143,1.993,144,2.432,145,1.993,146,2.432,147,2.432,148,2.432,149,1.374,150,1.044,151,1.31,152,2.432,153,1.62,154,1.374,155,1.62,156,1.374,157,1.374,158,1.044,159,2.432,160,1.62,161,1.62,162,1.62,163,1.374,164,1.62,165,1.568,166,1.62,167,1.62,168,1.62,169,1.62,170,1.374,171,1.374,172,1.191,173,1.191]],["title/interfaces/DatabasePingCheckSettings.html",[92,0.415,136,1.716]],["body/interfaces/DatabasePingCheckSettings.html",[0,0.095,1,1.718,2,0.326,3,0.274,4,0.274,7,0.274,8,0.926,11,3.824,13,1.348,14,1.718,15,2.261,16,0.648,17,1.518,23,1.182,25,0.048,27,0.474,28,0.733,30,0.653,31,1.132,32,0.82,33,0.822,34,0.474,35,1.294,37,0.504,38,0.036,39,0.026,40,0.474,42,1.182,44,1.348,45,1.409,46,0.942,47,1.348,51,0.504,53,1.718,55,1.718,56,1.555,63,0.648,67,2.309,68,2.309,69,1.518,70,0.754,78,2.442,79,1.555,82,1.348,85,1.555,86,0.573,89,1.11,90,0.573,91,1.182,92,0.474,94,0.833,96,1.182,97,1.555,98,1.718,108,1.964,113,1.409,115,2.926,116,1.555,117,1.718,120,1.555,123,2.9,124,1.555,126,1.348,127,1.555,128,2.261,130,1.518,131,1.555,132,3.496,136,2.309,138,1.833,139,2.309,140,1.833,141,1.348,142,4.042,144,1.833,146,1.833,147,1.833,148,1.833,149,1.555,150,1.182,151,1.409,152,2.666,153,1.833,154,2.261,155,2.666,156,2.261,157,2.261,158,1.718,159,3.141,160,1.833,161,1.833,162,1.833,163,1.555,164,1.833,165,1.718,166,1.833,167,1.833,168,1.833,169,1.833,170,1.555,171,1.555,172,1.348,173,1.348,174,1.718]],["title/classes/HealthIndicator.html",[0,0.121,94,0.729]],["body/classes/HealthIndicator.html",[0,0.172,2,0.448,3,0.377,4,0.377,7,0.498,20,1.004,21,1.273,24,1.435,25,0.047,26,0.787,27,0.662,28,0.777,30,0.878,32,0.524,34,0.448,35,1.315,38,0.043,39,0.033,42,2.144,45,1.894,46,1.175,51,0.693,52,1.893,63,1.398,68,3.251,69,2.405,70,0.798,80,2.521,91,2.399,94,1.039,123,3.023,175,3.325,176,2.521,177,1.893,178,4.577,179,4.09,180,1.491,181,4.577,182,4.577,183,3.101,184,4.577,185,3.325,186,3.101,187,3.325,188,4.09,189,4.09,190,3.325,191,4.09,192,3.101,193,3.101,194,3.101]],["title/injectables/TerminusBootstrapService.html",[40,0.415,195,1.505]],["body/injectables/TerminusBootstrapService.html",[0,0.065,2,0.503,3,0.187,4,0.187,7,0.462,8,2.166,9,1.429,10,1.465,12,2.83,14,1.285,17,1.966,18,1.135,20,0.989,21,1.865,24,1.612,25,0.047,26,0.884,27,0.55,28,0.71,29,1.691,30,0.817,31,0.904,32,0.684,33,0.562,34,0.223,35,1.22,38,0.037,39,0.02,40,0.503,45,1.476,46,1,48,3.09,51,0.344,52,1.135,53,2.808,55,1.825,63,0.877,66,1.993,67,1.465,70,0.887,71,2.83,76,1.612,86,0.965,89,1,90,0.391,92,0.223,94,0.965,96,2.122,98,1.285,113,1.114,117,2.31,119,1.062,126,1.465,139,0.92,141,0.92,165,2.31,170,1.062,174,1.285,195,1.285,196,2.782,197,1.252,198,2.42,199,2.401,200,2.081,201,1.675,202,2.081,203,2.83,204,0.585,205,4.408,206,4.656,207,3.482,208,3.054,209,2.451,210,2.451,211,2.482,212,4.049,213,3.482,214,1.54,215,1,216,3.482,217,2.451,218,2.451,219,2.451,220,2.451,221,3.291,222,1.54,223,1.54,224,1.612,225,1.54,226,2.451,227,2.451,228,1.54,229,3.583,230,2.451,231,2.451,232,4.247,233,1.54,234,2.451,235,2.451,236,3.054,237,1.54,238,2.451,239,1.54,240,3.291,241,1.54,242,2.451,243,0.92,244,1.062,245,1.252,246,1.54,247,1.062,248,1.252,249,1.252,250,1.54,251,1.54,252,1.54,253,1.54,254,1.54,255,2.451,256,1.54,257,1.54,258,1.54,259,1.54,260,4.247,261,1.54,262,1.54,263,1.54,264,1.54,265,1.54,266,2.451,267,1.54,268,1.54,269,1.54,270,1.54,271,1.54,272,1.54,273,1.54,274,1.54,275,1.54,276,1.54,277,1.54,278,0.807,279,1.54,280,1.54,281,1.54,282,1.54,283,1.54,284,1.54,285,1.54,286,1.54,287,1.54]],["title/modules/TerminusCoreModule.html",[204,0.415,288,1.505]],["body/modules/TerminusCoreModule.html",[0,0.093,2,0.319,3,0.268,4,0.268,7,0.268,18,1.02,25,0.047,28,0.788,30,0.373,32,0.877,34,0.646,35,1.205,37,1.211,38,0.026,39,0.026,40,0.551,41,1.999,45,0.804,53,2.199,55,1.155,61,1.69,70,0.964,76,1.943,90,0.56,96,1.69,98,1.155,130,2.067,154,2.224,165,1.69,195,2.589,196,1.317,198,2.669,199,2.224,200,1.927,201,1.682,202,1.927,204,0.788,215,1.283,243,2.508,245,1.792,247,1.52,249,1.792,288,2.525,289,1.999,290,1.792,291,1.792,292,1.792,293,1.792,294,2.622,295,1.792,296,1.155,297,2.204,298,4.197,299,3.225,300,2.622,301,3.1,302,3.225,303,3.814,304,3.814,305,1.53,306,1.324,307,1.792,308,1.792,309,2.204,310,2.894,311,2.204,312,1.927,313,2.204,314,2.622,315,2.622,316,3.411,317,1.792,318,1.792,319,1.02,320,1.792,321,3.225,322,2.204,323,2.204,324,4.197,325,2.204,326,3.814,327,3.225,328,3.225,329,3.814,330,1.155,331,2.204,332,1.69,333,2.204,334,2.204,335,2.204]],["title/interfaces/TerminusEndpoints.html",[92,0.415,336,1.329]],["body/interfaces/TerminusEndpoints.html",[0,0.119,2,0.409,3,0.344,4,0.344,7,0.344,16,0.812,20,1.245,25,0.048,26,0.976,27,0.709,28,0.731,30,0.874,31,1.13,32,0.792,34,0.678,37,1.095,38,0.031,39,0.031,40,0.556,46,1.104,51,0.631,63,1.347,70,0.552,73,2.651,86,0.976,89,1.104,90,0.718,92,0.731,94,1.19,174,2.015,177,1.78,180,1.031,201,1.638,204,0.709,215,1.255,224,2.17,278,2.651,305,1.031,306,1.16,319,1.309,330,1.482,332,1.482,336,2.022,337,1.482,338,1.482,339,2.015,340,1.689,341,1.689,342,1.689,343,1.689,344,2.297,345,1.689,346,1.689,347,1.689,348,1.482,349,1.689,350,1.689]],["title/modules/TerminusModule.html",[204,0.415,312,1.716]],["body/modules/TerminusModule.html",[0,0.143,2,0.492,3,0.414,4,0.414,7,0.414,25,0.047,28,0.729,30,0.575,32,0.9,33,1.241,34,0.492,35,1.248,38,0.035,39,0.035,41,1.783,45,1.241,61,1.783,70,0.848,90,0.864,130,1.575,177,2.011,198,2.596,201,1.754,204,0.82,215,1.248,288,1.783,300,3.531,301,3.89,305,1.584,307,2.766,308,2.766,312,3.013,314,2.766,316,3.531,317,2.766,319,1.575,320,2.766,351,3.402,352,3.402,353,3.402,354,3.402,355,3.402]],["title/interfaces/TerminusModuleAsyncOptions.html",[92,0.415,305,1.047]],["body/interfaces/TerminusModuleAsyncOptions.html",[0,0.154,2,0.378,3,0.318,4,0.318,7,0.318,16,1.047,20,1.469,25,0.047,26,1.254,27,0.784,28,0.813,30,0.767,31,0.937,32,0.806,34,0.656,37,1.173,38,0.029,39,0.029,40,0.714,46,1.303,51,0.584,63,1.303,70,0.511,73,1.91,86,0.925,89,0.751,90,0.664,92,0.714,94,0.664,174,1.91,177,1.211,180,1.529,201,1.7,204,0.747,215,1.205,224,1.687,278,2.377,305,1.329,306,1.074,319,1.687,330,2.377,332,2.377,336,1.687,337,1.371,338,1.371,339,1.371,340,1.563,341,1.563,342,1.563,343,1.563,344,2.506,345,1.563,346,2.178,347,2.178,348,1.91,349,2.711,350,1.563]],["title/interfaces/TerminusModuleOptions.html",[92,0.415,215,0.825]],["body/interfaces/TerminusModuleOptions.html",[0,0.123,2,0.422,3,0.355,4,0.355,7,0.355,16,0.838,20,1.272,25,0.048,26,0.997,27,0.686,28,0.754,30,0.802,31,0.991,32,0.802,34,0.686,37,1.107,38,0.032,39,0.032,40,0.568,46,1.128,51,0.651,63,1.128,70,0.569,73,2.058,86,0.997,89,0.838,90,0.741,92,0.738,94,0.741,174,2.058,177,1.35,180,1.063,201,1.69,204,0.738,215,1.364,224,1.818,278,2.78,305,1.063,306,1.197,319,1.35,330,1.529,332,1.529,336,2.198,337,1.529,338,1.529,339,1.529,340,1.743,341,1.743,342,1.743,343,2.346,344,2.346,345,1.743,346,1.743,347,1.743,348,1.529,349,1.743,350,1.743]],["title/interfaces/TerminusOptionsFactory.html",[92,0.415,306,1.178]],["body/interfaces/TerminusOptionsFactory.html",[0,0.121,2,0.414,3,0.349,4,0.349,7,0.349,16,0.823,20,1.257,21,1.176,25,0.048,26,0.985,27,0.636,28,0.764,30,0.797,31,0.983,32,0.797,34,0.682,37,1.134,38,0.031,39,0.031,40,0.561,46,1.114,51,0.64,52,1.796,63,1.114,70,0.859,73,2.033,86,1.117,89,0.823,90,0.728,92,0.751,94,0.728,177,1.326,180,1.415,201,1.711,204,0.734,215,1.354,224,1.796,278,2.471,305,1.045,306,1.593,319,1.326,330,1.502,332,1.502,336,1.796,337,2.033,338,1.502,339,1.502,340,1.712,341,1.712,342,1.712,343,1.712,344,2.629,345,2.817,346,1.712,347,1.712,348,1.502,349,1.712,350,1.712,356,2.866]],["title/classes/TimeoutError.html",[0,0.121,151,1.047]],["body/classes/TimeoutError.html",[0,0.186,2,0.505,3,0.425,4,0.425,7,0.537,8,2.089,9,1.812,10,2.639,16,1.268,17,2.242,18,1.616,20,1.648,21,1.433,23,2.314,24,1.616,25,0.046,26,0.886,27,0.505,28,0.505,29,3.756,30,0.86,31,1.137,32,0.59,33,1.273,34,0.505,35,1.268,38,0.036,39,0.036,76,2.044,78,2.482,108,2.356,132,3.045,151,1.61,158,2.314,171,2.408,172,2.086,357,3.589,358,2.838,359,4.416,360,4.416,361,3.491,362,3.491]],["title/classes/TimeoutError-1.html",[0,0.102,151,0.88,163,1.665]],["body/classes/TimeoutError-1.html",[0,0.185,2,0.5,3,0.421,4,0.421,7,0.421,8,1.979,9,1.42,16,1.261,25,0.047,34,0.635,35,1.261,38,0.035,39,0.035,70,0.857,76,2.032,78,2.515,86,1.42,89,1.261,108,2.032,113,1.261,150,1.812,151,1.758,158,2.743,165,1.812,172,2.067,180,1.261,296,1.812,363,2.385,364,2.385,365,3.568,366,2.811,367,3.568,368,2.385,369,3.568,370,2.811,371,2.811,372,2.811,373,2.811,374,2.811,375,2.811,376,2.811,377,2.811,378,2.385,379,2.811]],["title/contributing.html",[9,0.991,380,1.443,381,1.962]],["body/contributing.html",[2,0.187,3,0.259,4,0.33,7,0.259,9,0.874,13,1.273,25,0.038,26,0.329,27,0.308,28,0.392,31,0.289,32,0.219,37,0.289,38,0.017,39,0.017,44,1.622,46,1.228,47,0.774,49,3.815,52,0.599,61,1.959,82,1.622,86,0.329,104,1.052,106,1.052,113,1.363,117,2.459,118,1.732,119,0.893,156,1.469,157,0.893,173,1.622,187,2.557,190,1.052,200,0.774,202,0.774,203,1.052,211,1.732,221,1.732,229,1.732,248,1.052,289,1.116,296,1.422,315,1.052,339,1.648,348,1.116,368,0.893,378,1.469,380,0.774,381,2.206,382,1.295,383,3.476,384,2.714,385,2.714,386,3.476,387,1.295,388,2.13,389,1.052,390,3.739,391,4.404,392,4.693,393,2.13,394,4.404,395,2.714,396,5.041,397,4.404,398,4.609,399,2.714,400,3.476,401,5.041,402,2.714,403,2.557,404,1.295,405,3.039,406,1.732,407,1.295,408,1.469,409,2.714,410,4.513,411,1.295,412,1.295,413,2.13,414,1.295,415,3.145,416,3.145,417,2.714,418,2.13,419,2.13,420,2.13,421,1.052,422,1.295,423,1.295,424,1.295,425,1.295,426,2.13,427,1.295,428,1.295,429,1.295,430,1.295,431,1.295,432,2.13,433,3.476,434,1.295,435,1.295,436,1.295,437,1.295,438,1.295,439,1.295,440,1.295,441,1.295,442,1.295,443,4.277,444,3.476,445,4.513,446,4.513,447,2.714,448,2.714,449,2.714,450,2.714,451,1.295,452,2.13,453,1.295,454,5.269,455,1.295,456,1.295,457,3.145,458,2.13,459,1.295,460,2.13,461,1.295,462,2.13,463,2.13,464,1.295,465,2.13,466,1.732,467,1.295,468,1.295,469,1.295,470,1.295,471,3.145,472,2.13,473,1.295,474,1.295,475,1.295,476,2.714,477,1.295,478,1.295,479,1.295,480,3.145,481,3.145,482,1.295,483,1.295,484,2.13,485,2.13,486,2.13,487,1.295,488,1.295,489,1.295,490,1.295,491,1.295,492,2.13,493,2.13,494,2.13,495,1.295,496,3.145,497,1.295,498,1.295,499,1.295,500,1.295,501,3.145,502,1.295,503,1.295,504,1.295,505,1.295,506,2.714,507,1.295,508,1.295,509,1.295,510,4.693,511,4.609,512,2.13,513,1.295,514,3.739,515,1.295,516,2.714,517,1.295,518,3.58,519,2.13,520,1.295,521,2.13,522,1.295,523,1.295,524,2.557,525,2.714,526,2.13,527,1.295,528,1.295,529,2.13,530,2.13,531,1.295,532,2.13,533,2.13,534,1.295,535,1.295,536,3.476,537,2.13,538,2.13,539,1.295,540,1.295,541,3.145,542,1.295,543,1.295,544,2.13,545,1.295,546,2.13,547,1.295,548,1.052,549,2.13,550,1.295,551,3.145,552,1.295,553,2.714,554,1.295,555,2.714,556,1.295,557,1.295,558,2.13,559,1.295,560,1.295,561,2.714,562,1.295,563,2.13,564,1.295,565,1.295,566,2.206,567,1.295,568,1.295,569,1.295,570,2.13,571,1.295,572,1.295,573,1.295,574,2.13,575,1.295,576,1.295,577,1.732,578,2.13,579,1.295,580,1.295,581,1.295,582,1.295,583,1.295,584,1.295,585,1.295,586,3.145,587,1.295,588,1.295,589,1.295,590,1.295,591,1.295,592,1.295,593,3.476,594,3.145,595,3.145,596,1.295,597,3.145,598,3.145,599,1.295,600,1.295,601,1.052,602,1.295,603,1.295,604,1.295,605,2.13,606,2.13,607,1.295,608,1.295,609,1.052,610,1.295,611,1.295,612,1.295,613,1.052,614,1.295,615,1.295,616,3.476,617,2.13,618,1.295,619,1.295,620,1.295,621,1.295,622,1.732,623,2.13,624,1.295,625,1.295,626,1.295,627,1.295,628,2.13,629,1.295,630,1.295,631,1.295,632,1.295,633,1.295,634,1.295,635,1.295,636,1.295,637,1.295,638,1.295,639,1.295,640,1.295,641,1.295,642,2.13,643,1.295,644,1.295,645,1.295,646,1.295,647,1.295,648,2.13,649,2.13,650,2.13,651,1.295,652,1.295,653,1.295,654,1.295,655,1.295,656,1.295,657,1.295,658,2.714,659,1.295,660,1.295,661,1.295,662,1.295,663,1.295,664,3.145,665,3.476,666,1.052,667,1.295,668,1.295,669,1.052,670,1.295,671,1.295,672,1.295,673,1.295,674,1.295,675,1.295,676,1.295,677,1.295,678,1.295,679,1.295,680,1.295,681,1.295]],["title/coverage.html",[682,3.158]],["body/coverage.html",[0,0.21,1,1.719,4,0.399,5,2.667,6,2.667,25,0.046,27,0.474,38,0.034,39,0.034,40,0.68,41,1.719,42,2.606,43,2.667,92,0.745,94,0.833,113,1.196,130,1.519,131,2.927,136,1.961,150,1.719,151,1.547,175,2.667,176,2.667,195,1.719,196,2.536,197,2.667,204,0.719,215,0.942,243,1.961,244,2.263,305,1.196,306,1.347,310,2.263,336,1.519,337,2.606,338,2.606,357,2.667,358,2.667,363,2.927,364,2.927,524,2.667,577,4.641,682,2.667,683,3.281,684,3.281,685,5.15,686,3.281,687,4.244,688,3.281,689,3.281,690,3.281,691,2.667,692,3.43,693,5.15,694,3.45,695,3.281,696,3.281]],["title/dependencies.html",[289,1.805,697,2.414]],["body/dependencies.html",[25,0.046,33,1.522,38,0.04,39,0.04,90,1.06,149,2.879,247,2.879,289,2.581,609,3.393,698,4.174,699,4.174,700,4.174,701,4.925,702,4.174,703,4.174,704,4.174,705,4.174,706,4.174,707,4.174,708,4.174,709,4.174]],["title/index.html",[9,0.991,51,0.539,380,1.443]],["body/index.html",[3,0.47,7,0.47,14,2.027,25,0.041,38,0.038,39,0.038,61,2.658,101,3.144,201,1.253,204,0.559,240,3.144,380,2.311,389,3.144,403,3.144,405,3.144,406,3.144,408,3.245,421,3.144,466,3.144,548,3.144,566,3.144,613,3.144,622,3.144,666,4.122,669,3.144,710,3.867,711,3.867,712,3.867,713,3.867,714,3.867,715,3.867,716,3.867,717,3.867,718,3.867,719,3.867,720,4.705,721,3.867,722,3.867,723,3.867,724,3.867,725,3.867,726,3.867,727,3.867,728,3.867,729,3.867,730,3.867,731,3.867,732,3.867,733,3.867,734,3.867,735,3.867,736,3.867]],["title/modules.html",[204,0.562]],["body/modules.html",[25,0.041,38,0.041,39,0.041,173,2.629,204,0.636,288,2.305,312,2.629,408,3.034,737,4.399,738,4.399,739,5.078,740,4.399]],["title/overview.html",[741,3.158]],["body/overview.html",[0,0.175,25,0.042,34,0.6,37,0.927,38,0.04,39,0.04,40,0.6,92,0.6,195,2.74,198,2.48,204,0.71,288,2.831,289,2.175,290,3.374,291,3.374,292,3.374,293,3.374,294,3.99,295,3.374,296,2.175,741,3.374,742,4.151,743,4.151,744,4.151,745,4.151]],["title/miscellaneous/typealiases.html",[746,1.443,747,3.444]],["body/miscellaneous/typealiases.html",[25,0.04,27,0.712,30,0.885,31,0.932,38,0.042,39,0.04,45,1.796,51,0.932,69,1.932,91,2.746,180,1.796,185,3.393,224,2.425,746,2.495,748,4.174,749,4.925,750,5.24,751,4.174]],["title/miscellaneous/variables.html",[692,2.375,746,1.443]],["body/miscellaneous/variables.html",[25,0.047,27,0.674,28,0.465,37,0.718,38,0.034,39,0.034,40,0.674,51,0.718,63,1.418,69,1.939,70,0.818,76,1.939,78,2.369,86,1.357,89,0.924,108,1.489,113,1.173,139,2.95,141,2.95,150,2.442,151,1.173,158,2.587,180,1.173,196,1.922,199,2.218,200,1.922,201,1.357,202,1.922,204,0.465,215,0.924,243,2.784,244,3.404,296,1.686,310,3.213,318,2.615,363,2.218,364,2.889,365,2.615,366,2.615,367,2.615,368,2.889,369,3.405,370,2.615,371,2.615,372,2.615,373,2.615,374,2.615,375,2.615,376,2.615,377,2.615,378,2.218,379,2.615,518,2.615,601,2.615,691,3.405,692,2.218,694,2.615,746,1.922,752,3.216,753,4.189,754,3.216,755,3.216,756,4.189,757,3.216,758,3.216]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":105,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["0.2.8",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":163,"title":{"classes/TimeoutError-1.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["1/1",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":577,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["1000",{"_index":159,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["1000m",{"_index":140,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["2",{"_index":742,"title":{},"body":{"overview.html":{}}}],["2.16.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":743,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["39;https://google.com&#39",{"_index":84,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["3rd",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["4",{"_index":744,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":745,"title":{},"body":{"overview.html":{}}}],["5.2.2",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":85,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["abstract",{"_index":178,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["accept",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["ad",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["adapt",{"_index":220,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["add",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["addit",{"_index":190,"title":{},"body":{"classes/HealthIndicator.html":{},"contributing.html":{}}}],["adher",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["agreement",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["alias",{"_index":748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["alreadi",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["amaz",{"_index":723,"title":{},"body":{"index.html":{}}}],["amount",{"_index":155,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["angular",{"_index":718,"title":{},"body":{"index.html":{}}}],["answer",{"_index":415,"title":{},"body":{"contributing.html":{}}}],["api",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":191,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["applic",{"_index":14,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["appropri",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["arg",{"_index":350,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ask",{"_index":420,"title":{},"body":{"contributing.html":{}}}],["assur",{"_index":427,"title":{},"body":{"contributing.html":{}}}],["async",{"_index":55,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["asynchrn",{"_index":324,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["asynchron",{"_index":319,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["asyncprovid",{"_index":321,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["author",{"_index":728,"title":{},"body":{"index.html":{}}}],["autom",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["automat",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["avail",{"_index":173,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{},"modules.html":{}}}],["await",{"_index":98,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["axio",{"_index":81,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axioserror",{"_index":64,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrequestconfig",{"_index":74,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrespons",{"_index":93,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["b",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["back",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["backer",{"_index":724,"title":{},"body":{"index.html":{}}}],["be",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["befor",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["beta.5bugfix(@nestjs/cor",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":386,"title":{},"body":{"contributing.html":{}}}],["between",{"_index":377,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":184,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["bootstrap",{"_index":198,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"overview.html":{}}}],["bootstrap.servic",{"_index":309,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["bootstrap.service.t",{"_index":197,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["bootstrap.service.ts:106",{"_index":228,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:118",{"_index":233,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:131",{"_index":222,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:143",{"_index":237,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:23",{"_index":241,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:27",{"_index":217,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:47",{"_index":225,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:77",{"_index":239,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrapterminu",{"_index":207,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["branch",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["broccoli",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["brows",{"_index":739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":737,"title":{},"body":{"modules.html":{}}}],["browserstack",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["brunner",{"_index":732,"title":{},"body":{"index.html":{}}}],["bug",{"_index":397,"title":{},"body":{"contributing.html":{}}}],["bugfix",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":622,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["call",{"_index":238,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["capit",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["case",{"_index":118,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["catch",{"_index":127,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["caus",{"_index":29,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["chanc",{"_index":414,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["channel",{"_index":441,"title":{},"body":{"contributing.html":{}}}],["charact",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["chat",{"_index":436,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":31,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["checkout",{"_index":512,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["circl",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["cla",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":0,"title":{"classes/ConnectionNotFoundError.html":{},"classes/HealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"overview.html":{}}}],["cleartimeout(id",{"_index":373,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["click",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["close",{"_index":433,"title":{},"body":{"contributing.html":{}}}],["cluster_terminuscoremodul",{"_index":292,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["cluster_terminuscoremodule_provid",{"_index":293,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["code",{"_index":392,"title":{},"body":{"contributing.html":{}}}],["colon",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["command",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":401,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":179,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["concat(error",{"_index":264,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["conduct",{"_index":393,"title":{},"body":{"contributing.html":{}}}],["conduct][coc",{"_index":407,"title":{},"body":{"contributing.html":{}}}],["configur",{"_index":203,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["confirm",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["connect",{"_index":11,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["connection.query('select",{"_index":162,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["connectionnotfounderror",{"_index":1,"title":{"classes/ConnectionNotFoundError.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["consid",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["consist",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":165,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError.html":{}}}],["constructor(@opt",{"_index":160,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["constructor(caus",{"_index":19,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["constructor(connect",{"_index":134,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["constructor(httpservic",{"_index":58,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(opt",{"_index":214,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["constructor(priv",{"_index":95,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(timeout",{"_index":360,"title":{},"body":{"classes/TimeoutError.html":{}}}],["contain",{"_index":44,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["context",{"_index":15,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["contrast",{"_index":656,"title":{},"body":{"contributing.html":{}}}],["contribut",{"_index":381,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributor",{"_index":388,"title":{},"body":{"contributing.html":{}}}],["convent",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["coordin",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["core.modul",{"_index":352,"title":{},"body":{"modules/TerminusModule.html":{}}}],["core.module.t",{"_index":297,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["corpor",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["correct",{"_index":315,"title":{},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{}}}],["correspond",{"_index":79,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["coverag",{"_index":682,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craft",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":368,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["createasyncoptionsprovid",{"_index":331,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncprovid",{"_index":325,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createterminu",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createterminusopt",{"_index":345,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["creation",{"_index":346,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["current",{"_index":266,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["d",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["databas",{"_index":132,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{}}}],["databasehealthind",{"_index":130,"title":{"injectables/DatabaseHealthIndicator.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"coverage.html":{}}}],["databasehealthindicator.pingcheck(&#39;db&#39",{"_index":143,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["databasehealthindicator.pingcheck('db",{"_index":164,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["databasepingcheckset",{"_index":136,"title":{"interfaces/DatabasePingCheckSettings.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["declar",{"_index":291,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["default",{"_index":139,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["delet",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["depend",{"_index":289,"title":{"dependencies.html":{}},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["detail",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["develop",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["developer.md",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["directli",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["dn",{"_index":50,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthind",{"_index":41,"title":{"injectables/DNSHealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"coverage.html":{}}}],["dnshealthindicator.pingcheck(&#39;google&#39",{"_index":83,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthindicator.pingcheck('googl",{"_index":121,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["doc",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["docs(changelog",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":524,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["don't",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["dot",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":194,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["duplic",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["dynamicmodul",{"_index":301,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["each",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["easi",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["easier",{"_index":601,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["ecosystem",{"_index":353,"title":{},"body":{"modules/TerminusModule.html":{}}}],["edit",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["effici",{"_index":713,"title":{},"body":{"index.html":{}}}],["effort",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["endpoint",{"_index":278,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["endpoint.healthind",{"_index":263,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["enough",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["ensur",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["err",{"_index":128,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["error",{"_index":8,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["error.isaxioserror",{"_index":102,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.messag",{"_index":114,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.respons",{"_index":110,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statu",{"_index":111,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statustext",{"_index":112,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.stack",{"_index":275,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["error.t",{"_index":358,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["error.ts:7",{"_index":361,"title":{},"body":{"classes/TimeoutError.html":{}}}],["errors.length",{"_index":268,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["errors.push(error.caus",{"_index":257,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["etc",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":385,"title":{},"body":{"contributing.html":{}}}],["exampl",{"_index":82,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["exce",{"_index":359,"title":{},"body":{"classes/TimeoutError.html":{}}}],["exceed",{"_index":172,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["execut",{"_index":89,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["executehealthind",{"_index":208,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["executehealthindicators(healthind",{"_index":223,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["exist",{"_index":348,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["explan",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"overview.html":{}}}],["extend",{"_index":16,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["extern",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["f",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["factori",{"_index":344,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["fail",{"_index":119,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["fals",{"_index":116,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["fax",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["featur",{"_index":398,"title":{},"body":{"contributing.html":{}}}],["ff",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{}}}],["fill",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["find",{"_index":442,"title":{},"body":{"contributing.html":{}}}],["finish",{"_index":366,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":450,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":446,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":391,"title":{},"body":{"contributing.html":{}}}],["footer",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["forc",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["fork",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["form][corpor",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["form][individu",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["formatt",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["forroot(opt",{"_index":317,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forrootasync(opt",{"_index":320,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forth",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":13,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["found.error.t",{"_index":6,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:7",{"_index":22,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["framework",{"_index":712,"title":{},"body":{"index.html":{}}}],["full",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":180,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gener",{"_index":187,"title":{},"body":{"classes/HealthIndicator.html":{},"contributing.html":{}}}],["generatehttperror",{"_index":54,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["generatehttperror(key",{"_index":62,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["get",{"_index":9,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{}}}],["getstatu",{"_index":182,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["getstatus(key",{"_index":183,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["gist",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["git",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":410,"title":{},"body":{"contributing.html":{}}}],["gitter",{"_index":440,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":76,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":302,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["go",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["godaddy/terminu",{"_index":33,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{},"dependencies.html":{}}}],["google'",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["graph",{"_index":740,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":721,"title":{},"body":{"index.html":{}}}],["guid",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["guidelin",{"_index":390,"title":{},"body":{"contributing.html":{}}}],["gulp",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["handl",{"_index":299,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["hash",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["have",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["header",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["healtcheck",{"_index":235,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["health",{"_index":30,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"miscellaneous/typealiases.html":{}}}],["healthcheck",{"_index":260,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckerror",{"_index":17,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["healthcheckerror('healthcheck",{"_index":269,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckerror).caus",{"_index":271,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckmap",{"_index":232,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthchecks[endpoint.url",{"_index":270,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healtherror",{"_index":272,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthi",{"_index":189,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["healthind",{"_index":94,"title":{"classes/HealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["healthindicatorfunct",{"_index":224,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["healthindicatorresult",{"_index":91,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["hear",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["heavili",{"_index":716,"title":{},"body":{"index.html":{}}}],["help",{"_index":383,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":389,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["histori",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["http",{"_index":48,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["http_server_ref",{"_index":246,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["httpadapt",{"_index":216,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["httpmodul",{"_index":303,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["https://google.com",{"_index":122,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["https://nestjs.com",{"_index":734,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":205,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["httpservic",{"_index":59,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["id",{"_index":371,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["identifi",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["imper",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":248,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{}}}],["importantli",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["improv",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["includ",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["inclus",{"_index":404,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":45,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.interfac",{"_index":342,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["indicator.interface.t",{"_index":750,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["indicator.t",{"_index":176,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicator.ts:14",{"_index":186,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["indicators/database/database.health.t",{"_index":131,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["indicators/database/database.health.ts:32",{"_index":135,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/database/database.health.ts:47",{"_index":145,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/database/database.health.ts:62",{"_index":137,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/dns/dns.health.t",{"_index":43,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"coverage.html":{}}}],["indicators/dns/dns.health.ts:13",{"_index":60,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:27",{"_index":88,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:41",{"_index":65,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:76",{"_index":75,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/health",{"_index":175,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["individu",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{}}}],["inform",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["initi",{"_index":23,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{}}}],["inject",{"_index":40,"title":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(http_server_ref",{"_index":250,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["inject(terminus_lib",{"_index":251,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["inject(terminus_module_opt",{"_index":249,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["inspir",{"_index":717,"title":{},"body":{"index.html":{}}}],["instal",{"_index":719,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":12,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{}}}],["instanceof",{"_index":170,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["integr",{"_index":300,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["interfac",{"_index":92,"title":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/terminu",{"_index":307,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["intern",{"_index":298,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["intiail",{"_index":218,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["investig",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["ishealthi",{"_index":123,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{}}}],["issu",{"_index":396,"title":{},"body":{"contributing.html":{}}}],["it'",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["javascript",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["join",{"_index":726,"title":{},"body":{"index.html":{}}}],["json.stringify(healtherror.caus",{"_index":273,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["kamil",{"_index":729,"title":{},"body":{"index.html":{}}}],["keep",{"_index":402,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":68,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{}}}],["kind",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["lead",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":290,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["letter",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["lib.provid",{"_index":311,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["lib.provider.t",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/.../health",{"_index":749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../promis",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../terminu",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../terminus.constants.t",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/errors/connect",{"_index":5,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["lib/errors/timeout",{"_index":357,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["lib/health",{"_index":42,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"coverage.html":{}}}],["lib/interfaces/health",{"_index":751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/interfaces/terminu",{"_index":337,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["lib/terminu",{"_index":196,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.constants.t",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.module.t",{"_index":351,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/utils/promis",{"_index":363,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":202,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["licens",{"_index":666,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["line",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":343,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["liter",{"_index":185,"title":{},"body":{"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["livio",{"_index":731,"title":{},"body":{"index.html":{}}}],["local",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":229,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["logerror",{"_index":209,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logerror(messag",{"_index":227,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logger",{"_index":206,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logger(terminusbootstrapservice.nam",{"_index":242,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregist",{"_index":210,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregister(healtcheck",{"_index":231,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["long",{"_index":146,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["longer",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["love",{"_index":382,"title":{},"body":{"contributing.html":{}}}],["mail",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":384,"title":{},"body":{"contributing.html":{}}}],["mandatori",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["map",{"_index":236,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map((p",{"_index":255,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map(healthind",{"_index":254,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["master",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":39,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":147,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["mayb",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["mean",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["merg",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["messag",{"_index":117,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["metadata",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":52,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["millisecond",{"_index":367,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["mind",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["miscellan",{"_index":746,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":447,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":720,"title":{},"body":{"index.html":{}}}],["modul",{"_index":204,"title":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":340,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["moduleref",{"_index":304,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["more",{"_index":566,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["motiv",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["ms",{"_index":158,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":413,"title":{},"body":{"contributing.html":{}}}],["mysql",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":730,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{}}}],["necessari",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["nest",{"_index":61,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"contributing.html":{},"index.html":{}}}],["nestframework",{"_index":736,"title":{},"body":{"index.html":{}}}],["nestj",{"_index":221,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["nestjs/common",{"_index":90,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"dependencies.html":{}}}],["nestjs/common/interfac",{"_index":341,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["nestjs/cor",{"_index":247,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"dependencies.html":{}}}],["nestjs/nest",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["nestjs/typeorm",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["nestjs:mast",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":113,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newlin",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["node.j",{"_index":711,"title":{},"body":{"index.html":{}}}],["note",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["npm",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["number",{"_index":108,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":69,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.assign(previ",{"_index":267,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["object.keys(healtchecks).foreach(endpoint",{"_index":276,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["on",{"_index":339,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["onapplicationbootstrap",{"_index":212,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["open",{"_index":403,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["option",{"_index":28,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["options.connect",{"_index":166,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["options.import",{"_index":323,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.inject",{"_index":333,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.interfac",{"_index":308,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["options.interface.t",{"_index":338,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["options.interface.ts:36",{"_index":356,"title":{},"body":{"interfaces/TerminusOptionsFactory.html":{}}}],["options.timeout",{"_index":168,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["options.useclass",{"_index":329,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.useexist",{"_index":327,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.usefactori",{"_index":326,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactori",{"_index":334,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactory.createterminusopt",{"_index":335,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["order",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["out",{"_index":296,"title":{},"body":{"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlin",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":417,"title":{},"body":{"contributing.html":{}}}],["overflow'",{"_index":424,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":741,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.catch((error",{"_index":256,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["p.then((result",{"_index":258,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["packag",{"_index":697,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["param",{"_index":35,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["parti",{"_index":200,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":378,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["peer",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["peopl",{"_index":435,"title":{},"body":{"contributing.html":{}}}],["perf",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["perform",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["pick",{"_index":347,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ping",{"_index":142,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingcheck",{"_index":56,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingcheck(key",{"_index":72,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{}}}],["pingdb",{"_index":133,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["pingdb(connect",{"_index":144,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingdn",{"_index":57,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["pingdns(url",{"_index":87,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["place",{"_index":419,"title":{},"body":{"contributing.html":{}}}],["pleas",{"_index":405,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["possibl",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["pr",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["precis",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["prepar",{"_index":66,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["preparehealthcheck",{"_index":213,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["present",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["prevent",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["previou",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["privat",{"_index":53,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["problem",{"_index":395,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["progress",{"_index":710,"title":{},"body":{"index.html":{}}}],["project",{"_index":466,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promin",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["promis",{"_index":86,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":370,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promise.al",{"_index":252,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["promise.race([promis",{"_index":379,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout",{"_index":150,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout(timeout",{"_index":161,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["promisetimeouterror",{"_index":152,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["properti",{"_index":174,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["propos",{"_index":448,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":181,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["provid",{"_index":37,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":211,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["publish",{"_index":613,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pull",{"_index":445,"title":{},"body":{"contributing.html":{}}}],["push",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":394,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":669,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["race",{"_index":376,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["rais",{"_index":365,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["reach",{"_index":438,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":406,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["readabl",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["readili",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["readonli",{"_index":96,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["real",{"_index":437,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["redirect",{"_index":434,"title":{},"body":{"contributing.html":{}}}],["reduce((previ",{"_index":265,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["refactor",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["refer",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["reflect",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["regist",{"_index":253,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["registr",{"_index":234,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reject",{"_index":369,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":374,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["relat",{"_index":47,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["releas",{"_index":106,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["remot",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["report",{"_index":411,"title":{},"body":{"contributing.html":{}}}],["repositori",{"_index":444,"title":{},"body":{"contributing.html":{}}}],["repres",{"_index":177,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["reproduc",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":49,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["requir",{"_index":157,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["reset",{"_index":295,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["respon",{"_index":77,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["respond",{"_index":138,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["rest",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":38,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push(result",{"_index":259,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["return",{"_index":70,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["revert",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["rm",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["rout",{"_index":279,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["rule",{"_index":400,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":609,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["safe",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["sampl",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["saucelab",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":431,"title":{},"body":{"contributing.html":{}}}],["scalabl",{"_index":714,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["scenario",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["semi",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":240,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["servic",{"_index":219,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["set",{"_index":154,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{}}}],["settimeout",{"_index":372,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["sha",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["shell",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":715,"title":{},"body":{"index.html":{}}}],["sign",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["simpl",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["small",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["someon",{"_index":423,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":104,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["spec",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["special",{"_index":596,"title":{},"body":{"contributing.html":{}}}],["sponsor",{"_index":722,"title":{},"body":{"index.html":{}}}],["stack",{"_index":416,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":380,"title":{"contributing.html":{},"index.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["statement",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":316,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["statu",{"_index":192,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["statuscod",{"_index":107,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["statustext",{"_index":109,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["stay",{"_index":421,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["store",{"_index":226,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["string",{"_index":63,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":598,"title":{},"body":{"contributing.html":{}}}],["submiss",{"_index":399,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":443,"title":{},"body":{"contributing.html":{}}}],["successfulli",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["suggest",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["super",{"_index":97,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["super('connect",{"_index":36,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["super(`timeout",{"_index":362,"title":{},"body":{"classes/TimeoutError.html":{}}}],["support",{"_index":408,"title":{},"body":{"contributing.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":738,"title":{},"body":{"modules.html":{}}}],["synchron",{"_index":314,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["system",{"_index":426,"title":{},"body":{"contributing.html":{}}}],["systemat",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["tabl",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":418,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":148,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["tbc",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["tens",{"_index":650,"title":{},"body":{"contributing.html":{}}}],["terminu",{"_index":201,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["terminus.const",{"_index":245,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["terminus.modul",{"_index":313,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["terminus_lib",{"_index":244,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminus_module_opt",{"_index":243,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminusbootstrapservic",{"_index":195,"title":{"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["terminuscoremodul",{"_index":288,"title":{"modules/TerminusCoreModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{},"overview.html":{}}}],["terminuscoremodule.forroot(opt",{"_index":354,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminuscoremodule.forrootasync(opt",{"_index":355,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminusendpoint",{"_index":336,"title":{"interfaces/TerminusEndpoints.html":{}},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusexplor",{"_index":280,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["terminuslib",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminuslibprovid",{"_index":310,"title":{},"body":{"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminusmodul",{"_index":312,"title":{"modules/TerminusModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}}}],["terminusmoduleasyncopt",{"_index":305,"title":{"interfaces/TerminusModuleAsyncOptions.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusmoduleopt",{"_index":215,"title":{"interfaces/TerminusModuleOptions.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminusoptionsfactori",{"_index":306,"title":{"interfaces/TerminusOptionsFactory.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminuss",{"_index":230,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["test",{"_index":518,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["thank",{"_index":548,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["these.revert",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["third",{"_index":199,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["this.bootstrapterminu",{"_index":287,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.connect",{"_index":167,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.createasyncoptionsprovider(opt",{"_index":328,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.createasyncproviders(opt",{"_index":322,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.executehealthind",{"_index":262,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.generatehttperror(key",{"_index":129,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.getstatus(key",{"_index":115,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.httpadapter.gethttpserv",{"_index":286,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.httpserv",{"_index":285,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.httpservice.request",{"_index":99,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.logerror.bind(thi",{"_index":283,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.error(messag",{"_index":274,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.log",{"_index":277,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.loghealthcheckregister(healthcheck",{"_index":284,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.options.endpoints.foreach(endpoint",{"_index":261,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.pingdb(connect",{"_index":169,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.pingdns(url",{"_index":125,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.preparehealthcheck",{"_index":281,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.terminus(this.httpserv",{"_index":282,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["through",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":67,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["thrown",{"_index":10,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["time",{"_index":156,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["timeout",{"_index":78,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["timeout.t",{"_index":364,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror",{"_index":151,"title":{"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror('tim",{"_index":375,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["timeout}m",{"_index":171,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{}}}],["today",{"_index":387,"title":{},"body":{"contributing.html":{}}}],["todo",{"_index":101,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"index.html":{}}}],["token",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["topromis",{"_index":100,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["touch",{"_index":727,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["travi",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["tri",{"_index":124,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["true",{"_index":126,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["twitter",{"_index":735,"title":{},"body":{"index.html":{}}}],["two",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":747,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":149,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"dependencies.html":{}}}],["typescript",{"_index":120,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["ui",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["unfortun",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["unit",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["unknown",{"_index":20,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["up",{"_index":193,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["updat",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["upgrad",{"_index":103,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["upstream",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":73,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["us",{"_index":46,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["useclass",{"_index":330,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["useexist",{"_index":349,"title":{},"body":{"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["usefactori",{"_index":332,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoints.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["user",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["usevalu",{"_index":318,"title":{},"body":{"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["util",{"_index":153,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["valu",{"_index":141,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":692,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["veri",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["version",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":439,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":422,"title":{},"body":{"contributing.html":{}}}],["visibl",{"_index":430,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":71,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["vote",{"_index":425,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":409,"title":{},"body":{"contributing.html":{}}}],["we'll",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["wealth",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["web",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["websit",{"_index":733,"title":{},"body":{"index.html":{}}}],["well",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":188,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["white",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["word",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["workaround",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["wrapper",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":80,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{}}}],["you'd",{"_index":725,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":412,"title":{},"body":{"contributing.html":{}}}],["zone.j",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["zoom",{"_index":294,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ConnectionNotFoundError.html":{"url":"classes/ConnectionNotFoundError.html","title":"class - ConnectionNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectionNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/connection-not-found.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the connection\ninstance was not found in the application context\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/connection-not-found.error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Error which gets thrown when the connection\n * instance was not found in the application context\n */\nexport class ConnectionNotFoundError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(cause: unknown) {\n    super('Connection provider not found in application context', cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DNSHealthIndicator.html":{"url":"injectables/DNSHealthIndicator.html","title":"injectable - DNSHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DNSHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/dns/dns.health.ts\n        \n\n            \n                Description\n            \n            \n                The DNSHealthIndicator contains health indicators\nwhich are used for health checks related to HTTP requests\nand DNS\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateHttpError\n                            \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Private\n                                    Async\n                                pingDNS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/dns/dns.health.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the health indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpService provided by Nest\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateHttpError(key: string, error: AxiosError)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:41\n                            \n                        \n\n\n                \n                    \n                            Prepares and throw a HealthCheckError\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    AxiosError\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The thrown error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, url: string, options?: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the given url respons in the given timeout\nand returns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url which should be request\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional axios options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * dnsHealthIndicator.pingCheck(&#39;google&#39;, &#39;https://google.com&#39;, { timeout: 800 })\n   *\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            pingDNS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDNS(url: string, options: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executes a request with the given parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url of the health check\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The optional axios options of the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, HttpService } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../../interfaces';\nimport { AxiosResponse, AxiosRequestConfig, AxiosError } from 'axios';\nimport { HealthIndicator } from '../health-indicator';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The DNSHealthIndicator contains health indicators\n * which are used for health checks related to HTTP requests\n * and DNS\n */\n@Injectable()\nexport class DNSHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the health indicator\n   * @param httpService The HttpService provided by Nest\n   */\n  constructor(private readonly httpService: HttpService) {\n    super();\n  }\n\n  /**\n   * Executes a request with the given parameters\n   * @param url The url of the health check\n   * @param options The optional axios options of the request\n   */\n  private async pingDNS(\n    url: string,\n    options: AxiosRequestConfig,\n  ): Promise | unknown> {\n    return await this.httpService.request({ url, ...options }).toPromise();\n  }\n\n  /**\n   * Prepares and throw a HealthCheckError\n   * @param key The key which will be used for the result object\n   * @param error The thrown error\n   *\n   * @throws {HealthCheckError}\n   */\n  private generateHttpError(key: string, error: AxiosError) {\n    // TODO: Check for `error.isAxiosError`\n    // Upgrade axios for that as soon ^0.19.0 is released\n    if (error) {\n      let statusCode: number;\n      let statusText: string;\n      if (error.response) {\n        statusCode = error.response.status;\n        statusText = error.response.statusText;\n      }\n      throw new HealthCheckError(\n        error.message,\n        this.getStatus(key, false, {\n          message: error.message,\n          statusCode,\n          statusText,\n        }),\n      );\n    }\n  }\n\n  /**\n   * Checks if the given url respons in the given timeout\n   * and returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param url The url which should be request\n   * @param options Optional axios options\n   *\n   * @throws {HealthCheckError} In case the health indicator failed\n   *\n   * @example\n   * ```TypeScript\n   * dnsHealthIndicator.pingCheck('google', 'https://google.com', { timeout: 800 })\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    url: string,\n    options?: AxiosRequestConfig,\n  ): Promise {\n    let isHealthy = false;\n\n    try {\n      await this.pingDNS(url, options);\n      isHealthy = true;\n    } catch (err) {\n      this.generateHttpError(key, err);\n    }\n\n    return this.getStatus(key, isHealthy);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseHealthIndicator.html":{"url":"injectables/DatabaseHealthIndicator.html","title":"injectable - DatabaseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/database.health.ts\n        \n\n            \n                Description\n            \n            \n                The DatabaseHealthIndicator contains health indicators\nwhich are used for health checks related to database\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Private\n                                    Async\n                                pingDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/database/database.health.ts:32\n                            \n                        \n\n                \n                    \n                            Initializes the database indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The database connection of the application context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, options: DatabasePingCheckSettings)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/database/database.health.ts:62\n                            \n                        \n\n\n                \n                    \n                            Checks if the database responds in (default) 1000ms and\nreturns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DatabasePingCheckSettings\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The optional options for the database ping check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * databaseHealthIndicator.pingCheck(&#39;db&#39;, { timeout: 800 });\n   *\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            pingDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDb(connection: Connection, timeout: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/database/database.health.ts:47\n                            \n                        \n\n\n                \n                    \n                            Pings a database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                        \n                                                                    Connection\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The connection which the ping should get executed\n\n                                                        \n                                                \n                                                \n                                                        timeout\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The timeout how long the ping should maximum take\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../..';\nimport { Connection } from 'typeorm';\nimport { HealthCheckError } from '@godaddy/terminus';\nimport {\n  promiseTimeout,\n  TimeoutError as PromiseTimeoutError,\n} from '../../utils';\nimport { TimeoutError, ConnectionNotFoundError } from '../../errors';\nimport { HealthIndicator } from '../health-indicator';\n\n/**\n * The settings for the database ping check\n */\nexport interface DatabasePingCheckSettings {\n  /**\n   * The connection which the ping check should get executed\n   */\n  connection?: Connection;\n  /**\n   * The amount of time the check should require in ms\n   * @default 1000\n   */\n  timeout?: number;\n}\n\n/**\n * The DatabaseHealthIndicator contains health indicators\n * which are used for health checks related to database\n */\n@Injectable()\nexport class DatabaseHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the database indicator\n   * @param connection The database connection of the application context\n   */\n  constructor(@Optional() private readonly connection: Connection) {\n    super();\n  }\n\n  /**\n   * Pings a database\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  private async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.query('SELECT 1'));\n  }\n\n  /**\n   * Checks if the database responds in (default) 1000ms and\n   * returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param options The optional options for the database ping check\n   *\n   * @example\n   * ```TypeScript\n   * databaseHealthIndicator.pingCheck('db', { timeout: 800 });\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    options: DatabasePingCheckSettings = {},\n  ): Promise {\n    let isHealthy = false;\n    const connection = options.connection || this.connection;\n    const timeout = options.timeout || 1000;\n\n    if (!connection) {\n      throw new ConnectionNotFoundError(\n        this.getStatus(key, isHealthy, {\n          message: 'Connection provider not found in application context',\n        }),\n      );\n    }\n\n    try {\n      await this.pingDb(connection, timeout);\n      isHealthy = true;\n    } catch (err) {\n      if (err instanceof PromiseTimeoutError) {\n        throw new TimeoutError(\n          timeout,\n          this.getStatus(key, isHealthy, {\n            message: `timeout of ${timeout}ms exceeded`,\n          }),\n        );\n      }\n    }\n\n    if (isHealthy) {\n      return this.getStatus(key, isHealthy);\n    } else {\n      throw new HealthCheckError(\n        'Database is not available',\n        this.getStatus(key, isHealthy),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabasePingCheckSettings.html":{"url":"interfaces/DatabasePingCheckSettings.html","title":"interface - DatabasePingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabasePingCheckSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/database.health.ts\n        \n\n            \n                Description\n            \n            \n                The settings for the database ping check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:     Connection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Connection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../..';\nimport { Connection } from 'typeorm';\nimport { HealthCheckError } from '@godaddy/terminus';\nimport {\n  promiseTimeout,\n  TimeoutError as PromiseTimeoutError,\n} from '../../utils';\nimport { TimeoutError, ConnectionNotFoundError } from '../../errors';\nimport { HealthIndicator } from '../health-indicator';\n\n/**\n * The settings for the database ping check\n */\nexport interface DatabasePingCheckSettings {\n  /**\n   * The connection which the ping check should get executed\n   */\n  connection?: Connection;\n  /**\n   * The amount of time the check should require in ms\n   * @default 1000\n   */\n  timeout?: number;\n}\n\n/**\n * The DatabaseHealthIndicator contains health indicators\n * which are used for health checks related to database\n */\n@Injectable()\nexport class DatabaseHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the database indicator\n   * @param connection The database connection of the application context\n   */\n  constructor(@Optional() private readonly connection: Connection) {\n    super();\n  }\n\n  /**\n   * Pings a database\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  private async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.query('SELECT 1'));\n  }\n\n  /**\n   * Checks if the database responds in (default) 1000ms and\n   * returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param options The optional options for the database ping check\n   *\n   * @example\n   * ```TypeScript\n   * databaseHealthIndicator.pingCheck('db', { timeout: 800 });\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    options: DatabasePingCheckSettings = {},\n  ): Promise {\n    let isHealthy = false;\n    const connection = options.connection || this.connection;\n    const timeout = options.timeout || 1000;\n\n    if (!connection) {\n      throw new ConnectionNotFoundError(\n        this.getStatus(key, isHealthy, {\n          message: 'Connection provider not found in application context',\n        }),\n      );\n    }\n\n    try {\n      await this.pingDb(connection, timeout);\n      isHealthy = true;\n    } catch (err) {\n      if (err instanceof PromiseTimeoutError) {\n        throw new TimeoutError(\n          timeout,\n          this.getStatus(key, isHealthy, {\n            message: `timeout of ${timeout}ms exceeded`,\n          }),\n        );\n      }\n    }\n\n    if (isHealthy) {\n      return this.getStatus(key, isHealthy);\n    } else {\n      throw new HealthCheckError(\n        'Database is not available',\n        this.getStatus(key, isHealthy),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthIndicator.html":{"url":"classes/HealthIndicator.html","title":"class - HealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/health-indicator.ts\n        \n\n            \n                Description\n            \n            \n                Represents an abstract health indicator\nwith common functionalities\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatus(key: string, isHealthy: boolean, options?: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/health-indicator.ts:14\n                            \n                        \n\n\n                \n                    \n                            Generates the health indicator result object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used as key for the result object\n\n                                                        \n                                                \n                                                \n                                                        isHealthy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Whether the health indicator is healthy\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Additional options which will get appended to the result object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HealthIndicatorResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthIndicatorResult } from '../';\n\n/**\n * Represents an abstract health indicator\n * with common functionalities\n */\nexport abstract class HealthIndicator {\n  /**\n   * Generates the health indicator result object\n   * @param key The key which will be used as key for the result object\n   * @param isHealthy Whether the health indicator is healthy\n   * @param options Additional options which will get appended to the result object\n   */\n  protected getStatus(\n    key: string,\n    isHealthy: boolean,\n    options?: { [key: string]: unknown },\n  ): HealthIndicatorResult {\n    return {\n      [key]: {\n        status: isHealthy ? 'up' : 'down',\n        ...options,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TerminusBootstrapService.html":{"url":"injectables/TerminusBootstrapService.html","title":"injectable - TerminusBootstrapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TerminusBootstrapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/terminus-bootstrap.service.ts\n        \n\n            \n                Description\n            \n            \n                Bootstraps the third party Terminus library with the\nconfigured Module options\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServer\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bootstrapTerminus\n                            \n                            \n                                    Private\n                                    Async\n                                executeHealthIndicators\n                            \n                            \n                                    Private\n                                logError\n                            \n                            \n                                    Private\n                                logHealthCheckRegister\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                prepareHealthChecks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: TerminusModuleOptions, httpAdapter: HttpServer, terminus: Terminus)\n                    \n                \n                        \n                            \n                                Defined in lib/terminus-bootstrap.service.ts:27\n                            \n                        \n\n                \n                    \n                            Intiailizes the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus module options\n\n                                                        \n                                                \n                                                \n                                                        httpAdapter\n                                                  \n                                                        \n                                                                    HttpServer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http adapter from NestJS which will be used for the terminus instance\n\n                                                        \n                                                \n                                                \n                                                        terminus\n                                                  \n                                                        \n                                                                    Terminus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bootstrapTerminus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        bootstrapTerminus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the third party terminus library with\nthe given module options\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            executeHealthIndicators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeHealthIndicators(healthIndicators: HealthIndicatorFunction[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executes the given health indicators and stores the caused\nerrors and results\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healthIndicators\n                                                        \n                                                                    HealthIndicatorFunction[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health indicators which should get executed\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logError(message: string, error: HealthCheckError | Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            Logs an error message of terminuss\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The log message\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    HealthCheckError | Error\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The error which was thrown\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logHealthCheckRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logHealthCheckRegister(healtChecks: HealthCheckMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:118\n                            \n                        \n\n\n                \n                    \n                            Logs the health check registration to the logger\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healtChecks\n                                                        \n                                                                    HealthCheckMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health check map to log\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onApplicationBootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onApplicationBootstrap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Gets called when the application gets bootstrapped.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            prepareHealthChecks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        prepareHealthChecks()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Prepares the health check using the configured health\nindicators\n\n\n                            \n                                Returns :     HealthCheckMap\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpServer:     Server\n\n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:23\n                            \n                        \n\n                \n                    \n                        The http server of NestJS\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logger:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger(TerminusBootstrapService.name, true)\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:27\n                            \n                        \n\n                \n                    \n                        The NestJS logger\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  OnApplicationBootstrap,\n  HttpServer,\n  Logger,\n} from '@nestjs/common';\nimport { TERMINUS_MODULE_OPTIONS, TERMINUS_LIB } from './terminus.constants';\nimport { TerminusModuleOptions, HealthIndicatorFunction } from './interfaces';\nimport { HTTP_SERVER_REF } from '@nestjs/core';\nimport { Server } from 'http';\nimport { HealthCheckError, Terminus, HealthCheckMap } from '@godaddy/terminus';\n\n/**\n * Bootstraps the third party Terminus library with the\n * configured Module options\n */\n@Injectable()\nexport class TerminusBootstrapService implements OnApplicationBootstrap {\n  /**\n   * The http server of NestJS\n   */\n  private httpServer: Server;\n  /**\n   * The NestJS logger\n   */\n  private readonly logger = new Logger(TerminusBootstrapService.name, true);\n\n  /**\n   * Intiailizes the service\n   * @param options The terminus module options\n   * @param httpAdapter The http adapter from NestJS which will be used for the terminus instance\n   * @param terminus The terminus instance\n   */\n  constructor(\n    @Inject(TERMINUS_MODULE_OPTIONS)\n    private readonly options: TerminusModuleOptions,\n    @Inject(HTTP_SERVER_REF) private readonly httpAdapter: HttpServer,\n    @Inject(TERMINUS_LIB) private readonly terminus: Terminus,\n  ) {}\n\n  /**\n   * Executes the given health indicators and stores the caused\n   * errors and results\n   * @param healthIndicators The health indicators which should get executed\n   */\n  private async executeHealthIndicators(\n    healthIndicators: HealthIndicatorFunction[],\n  ): Promise {\n    const results: unknown[] = [];\n    const errors: unknown[] = [];\n    await Promise.all(\n      healthIndicators\n        // Register all promises\n        .map(healthIndicator => healthIndicator())\n        .map((p: Promise) =>\n          p.catch((error: Error) => {\n            if (error instanceof HealthCheckError) {\n              errors.push(error.causes);\n            } else {\n              throw error;\n            }\n          }),\n        )\n        .map((p: Promise) =>\n          p.then((result: unknown) => result && results.push(result)),\n        ),\n    );\n\n    return { results, errors };\n  }\n\n  /**\n   * Prepares the health check using the configured health\n   * indicators\n   */\n  private prepareHealthChecks(): HealthCheckMap {\n    const healthChecks: HealthCheckMap = {};\n    this.options.endpoints.forEach(endpoint => {\n      const healthCheck = async () => {\n        const { results, errors } = await this.executeHealthIndicators(\n          endpoint.healthIndicators,\n        );\n        const info = (results || [])\n          .concat(errors)\n          .reduce((previous, current) => Object.assign(previous, current), {});\n\n        if (errors.length) {\n          throw new HealthCheckError('Healthcheck failed', info);\n        } else {\n          return info;\n        }\n      };\n\n      healthChecks[endpoint.url] = healthCheck;\n    });\n\n    return healthChecks;\n  }\n\n  /**\n   * Logs an error message of terminuss\n   * @param message The log message\n   * @param error The error which was thrown\n   */\n  private logError(message: string, error: HealthCheckError | Error) {\n    if ((error as HealthCheckError).causes) {\n      const healthError: HealthCheckError = error as HealthCheckError;\n      message = `${message} ${JSON.stringify(healthError.causes)}`;\n    }\n    this.logger.error(message, error.stack);\n  }\n\n  /**\n   * Logs the health check registration to the logger\n   * @param healtChecks The health check map to log\n   */\n  private logHealthCheckRegister(healtChecks: HealthCheckMap) {\n    Object.keys(healtChecks).forEach(endpoint =>\n      this.logger.log(\n        `Mapped {${endpoint}, GET} healthcheck route`,\n        'TerminusExplorer',\n      ),\n    );\n  }\n\n  /**\n   * Bootstraps the third party terminus library with\n   * the given module options\n   */\n  private bootstrapTerminus() {\n    const healthChecks = this.prepareHealthChecks();\n    this.terminus(this.httpServer, {\n      healthChecks,\n      logger: this.logError.bind(this),\n    });\n    this.logHealthCheckRegister(healthChecks);\n  }\n\n  /**\n   * Gets called when the application gets bootstrapped.\n   */\n  public onApplicationBootstrap() {\n    this.httpServer = this.httpAdapter.getHttpServer();\n    this.bootstrapTerminus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusCoreModule.html":{"url":"modules/TerminusCoreModule.html","title":"module - TerminusCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusCoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus-core.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The internal Terminus Module which handles the integration\nwith the third party Terminus library and Nest\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     TerminusBootstrapService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  DynamicModule,\n  Global,\n  Inject,\n  Module,\n  Provider,\n  HttpModule,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n  TerminusOptionsFactory,\n} from './interfaces/terminus-module-options.interface';\nimport { TERMINUS_MODULE_OPTIONS } from './terminus.constants';\nimport { TerminusBootstrapService } from './terminus-bootstrap.service';\nimport { TerminusLibProvider } from './terminus-lib.provider';\nimport { TerminusModule } from './terminus.module';\nimport { DatabaseHealthIndicator } from '.';\nimport { DNSHealthIndicator } from './health-indicators';\n\n/**\n * The internal Terminus Module which handles the integration\n * with the third party Terminus library and Nest\n */\n@Global()\n@Module({\n  providers: [TerminusLibProvider, TerminusBootstrapService],\n  exports: [],\n})\nexport class TerminusCoreModule {\n  constructor(\n    @Inject(TERMINUS_MODULE_OPTIONS)\n    private readonly options: TerminusModuleOptions,\n    private readonly moduleRef: ModuleRef,\n  ) {}\n\n  /**\n   * Bootstraps the internal Terminus Module with the given options\n   * synchronously and sets the correct providers\n   * @param options The options to bootstrap the module synchronously\n   */\n  static forRoot(options: TerminusModuleOptions): DynamicModule {\n    const terminusModuleOptions = {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useValue: options,\n    };\n\n    return {\n      module: TerminusCoreModule,\n      imports: [HttpModule],\n      providers: [\n        terminusModuleOptions,\n        TerminusLibProvider,\n        TerminusBootstrapService,\n        DatabaseHealthIndicator,\n      ],\n      exports: [DatabaseHealthIndicator],\n    };\n  }\n\n  /**\n   * Bootstraps the internal Terminus Module with the given\n   * options asynchronously and sets the correct providers\n   * @param options The options to bootstrap the module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n    return {\n      module: TerminusModule,\n      imports: [...(options.imports || []), HttpModule],\n      providers: [\n        ...asyncProviders,\n        TerminusBootstrapService,\n        TerminusLibProvider,\n        DatabaseHealthIndicator,\n        DNSHealthIndicator,\n      ],\n      exports: [DatabaseHealthIndicator, DNSHealthIndicator],\n    };\n  }\n\n  /**\n   * Returns the asynchrnous providers depending on the given module\n   * options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncProviders(\n    options: TerminusModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useFactory || options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  /**\n   * Returns the asynchrnous Terminus options providers depending on the\n   * given module options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncOptionsProvider(\n    options: TerminusModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: TERMINUS_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: TerminusOptionsFactory) =>\n        await optionsFactory.createTerminusOptions(),\n      inject: [options.useClass || options.useExisting],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusEndpoints.html":{"url":"interfaces/TerminusEndpoints.html","title":"interface - TerminusEndpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusEndpoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Represents one endpoint / health check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        healthIndicators\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        healthIndicators\n                                    \n                                \n                                \n                                    \n                                        healthIndicators:     HealthIndicatorFunction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HealthIndicatorFunction[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The health checks which should get executed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the endpoint / health check\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoints {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoints[];\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options for the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusModule.html":{"url":"modules/TerminusModule.html","title":"module - TerminusModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Terminus Module which represents the integration of the\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n} from './interfaces/terminus-module-options.interface';\nimport { TerminusCoreModule } from './terminus-core.module';\nimport {\n  DatabaseHealthIndicator,\n  DNSHealthIndicator,\n} from './health-indicators';\n\n/**\n * Terminus Module which represents the integration of the\n * @godaddy/terminus module with the Nest ecosystem.\n */\n@Module({})\nexport class TerminusModule {\n  /**\n   * Bootstraps the Terminus Module synchronously\n   * @param options The options for the Terminus Module\n   */\n  static forRoot(options?: TerminusModuleOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRoot(options)],\n    };\n  }\n\n  /**\n   * Bootstrap the Terminus Module asynchronously\n   * @param options The options for the Terminus module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRootAsync(options)],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleAsyncOptions.html":{"url":"interfaces/TerminusModuleAsyncOptions.html","title":"interface - TerminusModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options for the asynchronous Terminus module creation\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The providers which should get injected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Import existing providers from other module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The factory which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoints {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoints[];\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options for the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleOptions.html":{"url":"interfaces/TerminusModuleOptions.html","title":"interface - TerminusModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options of the terminus module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                    \n                                \n                                \n                                    \n                                        endpoints:     TerminusEndpoints[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TerminusEndpoints[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of endpoints\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoints {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoints[];\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options for the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusOptionsFactory.html":{"url":"interfaces/TerminusOptionsFactory.html","title":"interface - TerminusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The interface for the factory which provides the Terminus options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createTerminusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTerminusOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTerminusOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/interfaces/terminus-module-options.interface.ts:36\n                            \n                        \n\n\n                \n                    \n                            The function which returns the Terminus Options\n\n\n                            \n                                Returns :     Promise | TerminusModuleOptions\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoints {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoints[];\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options for the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError.html":{"url":"classes/TimeoutError.html","title":"class - TimeoutError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/timeout-error.ts\n        \n\n            \n                Description\n            \n            \n                Gets thrown when the timeout of the\ndatabase health check exceeds\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeout: number, cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/timeout-error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeout\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The given timeout in ms\n\n                                                        \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Gets thrown when the timeout of the\n * database health check exceeds\n */\nexport class TimeoutError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {number} timeout The given timeout in ms\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(timeout: number, cause: unknown) {\n    super(`timeout of ${timeout}ms exceeded`, cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError-1.html":{"url":"classes/TimeoutError-1.html","title":"class - TimeoutError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/utils/promise-timeout.ts\n        \n\n            \n                Description\n            \n            \n                An errors which gets raised when the timeout\nexceeded\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TimeoutError extends Error {}\n\n/**\n * Executes a promise in the given timeout. If the promise\n * does not finish in the given timeout, it will\n * raise a TimeoutError\n *\n * @param {number} ms The timeout in milliseconds\n * @param {Promise} promise The promise which should get executed\n */\nexport const promiseTimeout = function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((resolve, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to Nest\nWe would love for you to contribute to Nest and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\n\n\n\n Code of Conduct\nHelp us keep Nest open and inclusive. Please read and follow our [Code of Conduct][coc]. -->\n\n Got a Question or Problem?\nDo not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on Stack Overflow where the questions should be tagged with tag nestjs.\nStack Overflow is a much better place to ask questions since:\n\n\nquestions and answers stay available for public viewing so your question / answer might help someone else\nStack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\nIf you would like to chat about the question in real-time, you can reach out via our gitter channel.\n Found a Bug?\nIf you find a bug in the source code, you can help us by\nsubmitting an issue to our GitHub Repository. Even better, you can\nsubmit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project. For your issue name, please prefix your proposal with [discussion], for example \"[discussion]: your feature idea\".\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submission Guidelines\n Submitting an Issue\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using a repository or Gist. Having a live, reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:\n\nversion of NestJS used\n3rd-party libraries and their versions\nand most importantly - a use-case that fails\n\n\n\n\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that don't have enough info to be reproduced.\nYou can file new issues by filling out our new issue form.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\nFork the nestjs/nest repo.\nMake your changes in a new git branch:\n  git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\nRun the full Nest test suite, as described in the developer documentation,\nand ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n  git commit -a Note: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n git push origin my-fix-branch\nIn GitHub, send a pull request to nestjs:master.\n\nIf we suggest changes then:\n\nMake the required updates.\nRe-run the Nest test suites to ensure tests are still passing.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n  git push origin --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\n\nAll public API methods must be documented. (Details TBC). -->\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters. An automated formatter is available, see\nDEVELOPER.md.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the Nest change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nFooter should contain a closing reference to an issue if any.\nSamples: (even more samples)\ndocs(changelog) update change log to beta.5bugfix(@nestjs/core) need to depend on latest rxjs and zone.js\n\nThe version in our package.json gets copied to the one we publish, and users need the latest of these.Revert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of the reverted commit. In the body it should say: This reverts commit ., where the hash is the SHA of the commit being reverted.\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeature: A new feature\nbugfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\n\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla]. -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/errors/connection-not-found.error.ts\n            \n            \n                class\n            \n            \n                ConnectionNotFoundError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/errors/timeout-error.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/database.health.ts\n            \n            \n                injectable\n            \n            \n                DatabaseHealthIndicator\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/database.health.ts\n            \n            \n                interface\n            \n            \n                DatabasePingCheckSettings\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/dns/dns.health.ts\n            \n            \n                injectable\n            \n            \n                DNSHealthIndicator\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/health-indicators/health-indicator.ts\n            \n            \n                class\n            \n            \n                HealthIndicator\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusEndpoints\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleAsyncOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusOptionsFactory\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/terminus-bootstrap.service.ts\n            \n            \n                injectable\n            \n            \n                TerminusBootstrapService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                lib/terminus-lib.provider.ts\n            \n            \n                variable\n            \n            \n                TerminusLibProvider\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_LIB\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_MODULE_OPTIONS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                variable\n            \n            \n                promiseTimeout\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            mysql : ^2.16.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^5.4.0\n        \n            @nestjs/core : ^5.4.0\n        \n            @nestjs/typeorm : ^5.2.2\n        \n            typeorm : ^0.2.8\n        \n            @godaddy/terminus : ^4.1.0\n        \n            reflect-metadata : 0.1.12\n        \n            rxjs : ^6.3.3\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nThe Terminus module for Nest.\nInstallation\nNOT PUBLISHED YET\nQuick Start\nTODO\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec & Livio Brunner\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TerminusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HealthIndicatorFunction   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            HealthIndicatorResult   (lib/.../health-indicator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/interfaces/health-indicator.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        HealthIndicatorFunction\n                    \n                \n                    \n                        \n                            A health indicator function for a health check\n\n                        \n                    \n                \n                    \n                        HealthIndicatorFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HealthIndicatorResult\n                    \n                \n                    \n                        \n                            The result object of a health indicator\n\n                        \n                    \n                \n                    \n                        HealthIndicatorResult:     literal type\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            promiseTimeout   (lib/.../promise-timeout.ts)\n                        \n                        \n                            TERMINUS_LIB   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TERMINUS_MODULE_OPTIONS   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TerminusLibProvider   (lib/.../terminus-lib.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/utils/promise-timeout.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            promiseTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((resolve, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n}\n                        \n                    \n\n                \n                    \n                        Executes a promise in the given timeout. If the promise\ndoes not finish in the given timeout, it will\nraise a TimeoutError\n\n                    \n                \n\n            \n        \n\n    lib/terminus.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_LIB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_LIB:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusLib'\n                        \n                    \n\n                \n                    \n                        The inject token for the third party Terminus library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_MODULE_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_MODULE_OPTIONS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusModuleOptions'\n                        \n                    \n\n                \n                    \n                        The inject token for the Terminus module options\n\n                    \n                \n\n            \n        \n\n    lib/terminus-lib.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TerminusLibProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TerminusLibProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: TERMINUS_LIB,\n  useValue: createTerminus,\n}\n                        \n                    \n\n                \n                    \n                        Create a wrapper so it is injectable & easier to test\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
